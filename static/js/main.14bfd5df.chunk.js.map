{"version":3,"sources":["components/Input.js","components/TimeoutVideo.js","components/Soundtrack.js","App.js","index.js"],"names":["Input","this","props","name","value","onChange","type","Component","TimeoutVideo","vidRef","useRef","canPlay","handleEnd","current","play","className","ref","onEnded","preload","src","process","musics","publicFolder","Soundtrack","updateMusicName","music","musicName","pause","isPlaying","paused","handleNext","newIndex","index","length","Audio","addEventListener","App","startTimer","soundtrack","state","timer","setInterval","timerHandler","setState","isStarted","isPaused","pauseTimer","fieldsBlinker","clearInterval","timerDisplay","resetTimer","hour","minute","second","isEnded","endTimer","time","Object","values","map","Number","entries","reduce","acc","timeUnit","String","endIntro","introEnded","endTimeoutVideo","target","document","title","alt","autoPlay","muted","idx","arr","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.14bfd5df.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    let { name, value, onChange } = this.props;\r\n\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name={ name }\r\n        value={ value }\r\n        onChange={ onChange }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;","import React, { useRef } from 'react';\r\n\r\nfunction TimeoutVideo(props) {\r\n  const vidRef = useRef(null);\r\n  const { canPlay, handleEnd } = props;\r\n\r\n  const playVideo = () => {\r\n    vidRef.current.play();\r\n  }\r\n\r\n  canPlay && playVideo();\r\n\r\n  const publicFolder = process.env.PUBLIC_URL;\r\n  return (\r\n    <video className=\"timeout-video\" ref={vidRef} onEnded={ handleEnd } preload=\"auto\">\r\n      <source src={ `${publicFolder}/assets/explosion.mp4` } type=\"video/mp4\" />\r\n    </video>\r\n  )\r\n}\r\n\r\nexport default TimeoutVideo;","const musics = [\r\n  \"The Ink Spots - It's All Over But The Crying\",\r\n  'Billie Holiday - Easy Living',\r\n  'Andrews Sisters & Danny Kaye - Civilization',\r\n  \"The Ink Spots - I Don't Want To Set The World On Fire\",\r\n  'Connie Allen - Rocket 69',\r\n];\r\nconst publicFolder = process.env.PUBLIC_URL;\r\n\r\nclass Soundtrack {\r\n  constructor(updateMusicName) {\r\n    this.updateMusicName = updateMusicName;\r\n    this.musicName = musics[0];\r\n    this.music = new Audio(`${publicFolder}/assets/soundtrack/${musics[0]}.mp3`)\r\n    this.music.addEventListener('ended', () => this.handleNext());\r\n    this.index = 0;\r\n  }\r\n\r\n  play = () => {\r\n    const { music, musicName, updateMusicName } = this;\r\n    music.play();\r\n    updateMusicName(musicName);\r\n  }\r\n\r\n  pause = () => {\r\n    this.music.pause();\r\n  }\r\n\r\n  isPlaying = () => !this.music.paused\r\n\r\n  handleNext = () => {\r\n    let newIndex = this.index + 1;\r\n    if(newIndex === musics.length - 1) newIndex = 0;\r\n    this.index = newIndex;\r\n\r\n    this.musicName = musics[newIndex];\r\n    this.updateMusicName(this.musicName);\r\n\r\n    this.music.src = `${publicFolder}/assets/soundtrack/${musics[newIndex]}`;\r\n    this.music.play();\r\n  }\r\n}\r\n\r\nexport default Soundtrack;","import React, { Component } from 'react';\n\nimport { VscDebugStart, VscDebugPause, VscDebugRestart } from 'react-icons/vsc';\nimport Input from './components/Input';\nimport TimeoutVideo from './components/TimeoutVideo';\nimport Soundtrack from './components/Soundtrack';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const soundtrack = new Soundtrack(this.updateMusicName);\n\n    this.state = {\n      time: {\n        hour: '00',\n        minute: '00',\n        second: '00',\n      },\n      timer: null,\n      isStarted: false,\n      isPaused: false,\n      isEnded: false,\n      introEnded: false,\n      soundtrack,\n      musicName: 'Awaiting User',\n      fieldsBlinker: null,\n      timerDisplay: true,\n    };\n  }\n\n  componentWillUnmount() {\n    const { soundtrack, timer, fieldsBlinker } = this.state;\n\n    soundtrack.pause();\n\n    clearInterval(timer);\n    clearInterval(fieldsBlinker);\n  }\n\n  startTimer = () => {\n    const { soundtrack } = this.state;\n    if (!soundtrack.isPlaying()) soundtrack.play();\n\n    const timer = setInterval(() => {\n      this.timerHandler(timer);\n    }, 1000);\n\n    this.setState({\n      isStarted: true,\n      isPaused: false,\n      timer,\n    });\n  };\n\n  pauseTimer = () => {\n    const { timer, fieldsBlinker } = this.state;\n    clearInterval(timer);\n    clearInterval(fieldsBlinker);\n\n    this.setState({\n      isPaused: true,\n      timer: null,\n      fieldsBlinker: null,\n      timerDisplay: true,\n    });\n  };\n\n  resetTimer = () => {\n    this.setState({\n      hour: 0,\n      minute: 0,\n      second: 0,\n      isStarted: false,\n      isPaused: false,\n      isEnded: false,\n      timer: null,\n    });\n  };\n\n  endTimer = () => {\n    const { soundtrack } = this.state;\n    soundtrack.pause();\n\n    const fieldsBlinker = setInterval(() => {\n      this.setState(({ timerDisplay }) => ({\n        timerDisplay: !timerDisplay,\n      }));\n    }, 500);\n    this.setState({ fieldsBlinker, isEnded: true });\n  };\n\n  timerHandler = (timer) => {\n    let { time } = this.state;\n    let [hour, minute, second] = Object.values(time).map((value) => Number(value));\n    const CLOCK_MAX = 59;\n\n    if (hour === 0 && minute === 0 && second === 0) {\n      clearInterval(timer);\n      this.endTimer();\n    } else if (minute === 0 && second === 0) {\n      hour -= 1;\n      minute = CLOCK_MAX;\n      second = CLOCK_MAX;\n    } else if (second === 0) {\n      minute -= 1;\n      second = CLOCK_MAX;\n    } else {\n      second -= 1;\n    }\n\n    time = Object.entries({ hour, minute, second }).reduce(\n      (acc, [timeUnit, value]) => ({\n        ...acc,\n        [timeUnit]: value < 10 ? `0${value}` : String(value),\n      }),\n      {}\n    );\n    this.setState({ time });\n  };\n\n  endIntro = () => this.setState({ introEnded: true });\n  \n  endTimeoutVideo = () => this.setState({ isEnded: false });\n\n\n  onChange = ({ target: { name, value } }) => {\n    const { time } = this.state;\n    const CLOCK_MAX = 59;\n\n    value = Number(value);\n    value = value < 10 ? `0${value}` : String(value);\n\n    if (value.length <= 2 && Number(value) <= CLOCK_MAX) {\n      this.setState({\n        time: {\n          ...time,\n          [name]: value,\n        },\n      });\n    }\n  };\n\n  updateMusicName = (musicName) => this.setState({ musicName });\n\n  render() {\n    const { time, isStarted, isPaused, isEnded, introEnded, musicName, timerDisplay } =\n      this.state;\n    const { hour, minute, second } = time;\n    const { startTimer, pauseTimer, resetTimer, onChange, endIntro, endTimeoutVideo } =\n      this;\n\n    // https://create-react-app.dev/docs/using-the-public-folder/\n    const publicFolder = process.env.PUBLIC_URL;\n    \n    document.title = `Pip Boy's Timer (${hour}:${minute}:${second})`\n    return (\n      <div className=\"App\">\n        <img\n          src={`${publicFolder}/assets/pip-boy.png`}\n          alt=\"Pip Boy\"\n          className=\"pip-boy-image\"\n        />\n        <TimeoutVideo canPlay={isEnded} handleEnd={endTimeoutVideo} />\n        <div className=\"pip-boy-screen\">\n          {!introEnded && (\n            <video autoPlay muted onEnded={endIntro} className=\"intro-video\">\n              <source src={`${publicFolder}/assets/initialize.mp4`} type=\"video/mp4\" />\n            </video>\n          )}\n          <h2 className=\"music-name\">{musicName}</h2>\n          {\n            <div\n              className={`timer${!isStarted ? '-input' : ''}${\n                !timerDisplay ? ' hidden' : ''\n              }`}\n            >\n              {Object.entries(time).map(([timeUnit, value], idx, arr) => (\n                <>\n                  {!isStarted ? (\n                    <Input\n                      key={timeUnit}\n                      name={timeUnit}\n                      value={value}\n                      onChange={onChange}\n                    />\n                  ) : (\n                    <span key={timeUnit}>{value}</span>\n                  )}\n                  {idx !== arr.length - 1 && ':'}\n                </>\n              ))}\n            </div>\n          }\n          {!isStarted ? (\n            <button type=\"button\" onClick={startTimer}>\n              <VscDebugStart />\n            </button>\n          ) : !isPaused ? (\n            <button type=\"button\" onClick={pauseTimer}>\n              <VscDebugPause />\n            </button>\n          ) : (\n            <div>\n              <button type=\"button\" onClick={startTimer}>\n                <VscDebugStart />\n              </button>\n              <button type=\"button\" onClick={resetTimer}>\n                <VscDebugRestart />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}