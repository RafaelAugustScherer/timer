{"version":3,"sources":["components/Input.js","components/TimeoutVideo.js","components/Soundtrack.js","components/MuteSound.js","App.js","index.js"],"names":["Input","this","props","name","value","onChange","type","Component","TimeoutVideo","vidRef","useRef","canPlay","handleEnd","current","play","className","ref","onEnded","preload","src","process","musics","publicFolder","Soundtrack","updateMusicName","music","musicName","pause","mute","muted","unmute","isPlaying","paused","handleNext","newIndex","index","length","changeMusic","Audio","addEventListener","MuteSound","click","state","isMuted","setState","onClick","App","startTimer","soundtrack","timer","setInterval","timerHandler","isStarted","isPaused","pauseTimer","fieldsBlinker","clearInterval","timerDisplay","resetTimer","hour","minute","second","isEnded","endTimer","time","Object","values","map","Number","entries","reduce","acc","timeUnit","String","endIntro","introEnded","endTimeoutVideo","target","CLOCK_MAX","console","log","document","title","alt","autoPlay","idx","arr","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3b29c52.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    let { name, value, onChange } = this.props;\r\n\r\n    return (\r\n      <input\r\n        type=\"text\"\r\n        name={ name }\r\n        value={ value }\r\n        onChange={ onChange }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;","import React, { useRef } from 'react';\r\n\r\nfunction TimeoutVideo(props) {\r\n  const vidRef = useRef(null);\r\n  const { canPlay, handleEnd } = props;\r\n\r\n  const playVideo = () => {\r\n    vidRef.current.play();\r\n  }\r\n\r\n  canPlay && playVideo();\r\n\r\n  const publicFolder = process.env.PUBLIC_URL;\r\n  return (\r\n    <video className=\"timeout-video\" ref={vidRef} onEnded={ handleEnd } preload=\"auto\">\r\n      <source src={ `${publicFolder}/assets/explosion.mp4` } type=\"video/mp4\" />\r\n    </video>\r\n  )\r\n}\r\n\r\nexport default TimeoutVideo;","const musics = [\r\n  \"The Ink Spots - It's All Over But The Crying\",\r\n  'Billie Holiday - Easy Living',\r\n  'Andrews Sisters & Danny Kaye - Civilization',\r\n  \"The Ink Spots - I Don't Want To Set The World On Fire\",\r\n  'Connie Allen - Rocket 69',\r\n];\r\nconst publicFolder = process.env.PUBLIC_URL;\r\n\r\nclass Soundtrack {\r\n  constructor(updateMusicName) {\r\n    this.updateMusicName = updateMusicName;\r\n    this.musicName = musics[0];\r\n    this.music = new Audio(`${publicFolder}/assets/soundtrack/${this.musicName}.mp3`);\r\n    this.music.addEventListener('ended', () => this.handleNext());\r\n    this.index = 0;\r\n  }\r\n\r\n  play = () => {\r\n    const { music, musicName, updateMusicName } = this;\r\n    music.play();\r\n    updateMusicName(musicName);\r\n  }\r\n\r\n  pause = () => this.music.pause();\r\n\r\n  mute = () => this.music.muted = true;\r\n\r\n  unmute = () => this.music.muted = false;\r\n\r\n  isPlaying = () => !this.music.paused\r\n\r\n  handleNext = () => {\r\n    let newIndex = this.index + 1;\r\n    if(newIndex === musics.length - 1) newIndex = 0;\r\n    this.index = newIndex;\r\n\r\n    this.musicName = musics[newIndex];\r\n    this.updateMusicName(this.musicName);\r\n\r\n    this.music.src = `${publicFolder}/assets/soundtrack/${musics[newIndex]}.mp3`;\r\n    this.music.play();\r\n  }\r\n\r\n  changeMusic = (musicName) => {\r\n    this.musicName = musicName;\r\n    this.music.src = `${publicFolder}/assets/soundtrack/${musicName}.mp3`;\r\n  }\r\n}\r\n\r\nexport default Soundtrack;","import React, { Component } from 'react';\r\nimport { VscMute, VscUnmute } from 'react-icons/vsc';\r\n\r\nclass MuteSound extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const { music } = props;\r\n\r\n    this.state = {\r\n      isMuted: false,\r\n      music,\r\n    };\r\n  }\r\n  \r\n  click = () => {\r\n    const { isMuted, music } = this.state;\r\n    \r\n    music.muted = !music.muted;\r\n    this.setState({ isMuted: !isMuted })\r\n  }\r\n\r\n  render() {\r\n    const { isMuted } = this.state;\r\n    const { click } = this;\r\n\r\n    return (\r\n      <>\r\n      {\r\n        isMuted ? (\r\n          <VscMute onClick={ click } className=\"mute-sound-icon\" />\r\n        ) : (\r\n          <VscUnmute onClick={ click } className=\"mute-sound-icon\" />\r\n        )\r\n      }\r\n      </>\r\n    )\r\n  };\r\n};\r\n\r\nexport default MuteSound;","import React, { Component } from 'react';\nimport { VscDebugStart, VscDebugPause, VscDebugRestart } from 'react-icons/vsc';\nimport Input from './components/Input';\nimport TimeoutVideo from './components/TimeoutVideo';\nimport Soundtrack from './components/Soundtrack';\nimport MuteSound from './components/MuteSound';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const soundtrack = new Soundtrack(this.updateMusicName);\n\n    this.state = {\n      time: {\n        hour: '00',\n        minute: '00',\n        second: '00',\n      },\n      timer: null,\n      isStarted: false,\n      isPaused: false,\n      isEnded: false,\n      introEnded: false,\n      soundtrack,\n      musicName: 'Awaiting User',\n      fieldsBlinker: null,\n      timerDisplay: true,\n    };\n  }\n\n  componentWillUnmount() {\n    const { soundtrack, timer, fieldsBlinker } = this.state;\n\n    soundtrack.pause();\n\n    clearInterval(timer);\n    clearInterval(fieldsBlinker);\n  }\n\n  startTimer = () => {\n    const { soundtrack } = this.state;\n    if (!soundtrack.isPlaying()) soundtrack.play();\n\n    const timer = setInterval(() => {\n      this.timerHandler(timer);\n    }, 1000);\n\n    this.setState({\n      isStarted: true,\n      isPaused: false,\n      timer,\n    });\n  };\n\n  pauseTimer = () => {\n    const { timer, fieldsBlinker } = this.state;\n    clearInterval(timer);\n    clearInterval(fieldsBlinker);\n\n    this.setState({\n      isPaused: true,\n      timer: null,\n      fieldsBlinker: null,\n      timerDisplay: true,\n    });\n  };\n\n  resetTimer = () => {\n    this.setState({\n      hour: 0,\n      minute: 0,\n      second: 0,\n      isStarted: false,\n      isPaused: false,\n      isEnded: false,\n      timer: null,\n    });\n  };\n\n  endTimer = () => {\n    const { soundtrack } = this.state;\n    soundtrack.pause();\n\n    const fieldsBlinker = setInterval(() => {\n      this.setState(({ timerDisplay }) => ({\n        timerDisplay: !timerDisplay,\n      }));\n    }, 500);\n    this.setState({ fieldsBlinker, isEnded: true, isStarted: false, isPaused: false });\n  };\n\n  timerHandler = (timer) => {\n    let { time } = this.state;\n    let [hour, minute, second] = Object.values(time).map((value) => Number(value));\n    const CLOCK_MAX = 59;\n\n    if (hour === 0 && minute === 0 && second === 0) {\n      clearInterval(timer);\n      this.endTimer();\n    } else if (minute === 0 && second === 0) {\n      hour -= 1;\n      minute = CLOCK_MAX;\n      second = CLOCK_MAX;\n    } else if (second === 0) {\n      minute -= 1;\n      second = CLOCK_MAX;\n    } else {\n      second -= 1;\n    }\n\n    time = Object.entries({ hour, minute, second }).reduce(\n      (acc, [timeUnit, value]) => ({\n        ...acc,\n        [timeUnit]: value < 10 ? `0${value}` : String(value),\n      }),\n      {}\n    );\n    this.setState({ time });\n  };\n\n  endIntro = () => this.setState({ introEnded: true });\n  \n  endTimeoutVideo = () => {\n    const { fieldsBlinker } = this.state;\n\n    clearInterval(fieldsBlinker);\n    this.setState({ isEnded: false, fieldsBlinker: null, timerDisplay: true });\n  }\n\n  onChange = ({ target: { name, value } }) => {\n    const { time, soundtrack } = this.state;\n    const CLOCK_MAX = name === 'hour' ? 99 : 59;\n\n    value = Number(value);\n    value = value < 10 ? `0${value}` : String(value);\n    \n    if (value.length <= 2 && Number(value) <= CLOCK_MAX) {\n      this.setState({\n        time: {\n          ...time,\n          [name]: value,\n        },\n      });\n    }\n    if (name === 'hour' && value === '69') {\n      soundtrack.changeMusic('Connie Allen - Rocket 69');\n    }\n    console.log(name, value);\n  };\n\n  updateMusicName = (musicName) => this.setState({ musicName });\n\n  render() {\n    const { time, isStarted, isPaused, isEnded, introEnded, musicName, timerDisplay, soundtrack } =\n      this.state;\n    const { hour, minute, second } = time;\n    const { startTimer, pauseTimer, resetTimer, onChange, endIntro, endTimeoutVideo } =\n      this;\n\n    // https://create-react-app.dev/docs/using-the-public-folder/\n    const publicFolder = process.env.PUBLIC_URL;\n    \n    document.title = `Pip Boy's Timer (${hour}:${minute}:${second})`\n    return (\n      <div className=\"App\">\n        <img\n          key=\"pip-boy-image\"\n          src={`${publicFolder}/assets/pip-boy.png`}\n          alt=\"Pip Boy\"\n          className=\"pip-boy-image\"\n        />\n        <TimeoutVideo key=\"timeout-video\" canPlay={isEnded} handleEnd={endTimeoutVideo} />\n        <div key=\"pip-boy-screen\" className=\"pip-boy-screen\">\n          <MuteSound music={ soundtrack.music } />\n          {!introEnded && (\n            <video autoPlay muted onEnded={endIntro} className=\"intro-video\">\n              <source src={`${publicFolder}/assets/initialize.mp4`} type=\"video/mp4\" />\n            </video>\n          )}\n          <h2 className=\"music-name\">{musicName}</h2>\n          {\n            <div\n              className={`timer${!isStarted ? '-input' : ''}${\n                !timerDisplay ? ' hidden' : ''\n              }`}\n            >\n              {Object.entries(time).map(([timeUnit, value], idx, arr) => (\n                <>\n                  {!isStarted ? (\n                    <Input\n                      key={timeUnit}\n                      name={timeUnit}\n                      value={value}\n                      onChange={onChange}\n                    />\n                  ) : (\n                    <span key={timeUnit}>{value}</span>\n                  )}\n                  {idx !== arr.length - 1 && ':'}\n                </>\n              ))}\n            </div>\n          }\n          {!isStarted ? (\n            <button key=\"start-timer-button\" type=\"button\" onClick={startTimer}>\n              <VscDebugStart />\n            </button>\n          ) : !isPaused ? (\n            <button key=\"pause-timer-button\" type=\"button\" onClick={pauseTimer}>\n              <VscDebugPause />\n            </button>\n          ) : (\n            <div>\n              <button key=\"start-timer-button\" type=\"button\" onClick={startTimer}>\n                <VscDebugStart />\n              </button>\n              <button key=\"restart-timer-button\" type=\"button\" onClick={resetTimer}>\n                <VscDebugRestart />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}